<?php
 
/**
 * Implements hook_field_info().
 */
function news_date_field_info() {
  return array(
    'news_date' => array(
      'label' => t('News  Date'),
      'description' => t('A Date Time Period'),
      'default_widget' => 'news_date_widget',
      'default_formatter' => 'news_date_formatter',
    ),
  );
}
 
 
/**
 * Implements hook_field_formatter_info().
 */
function news_date_field_formatter_info() {
  return array(
      'news_date_formatter' => array(
          'label' => t('Simple News Date formatter'),
          'field types' => array('news_date'),
      ),
  );
}
 
 
/**
 * Implements hook_field_formatter_view().
 */
function news_date_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
 
  switch ($display['type']) {
    case 'news_date_formatter':
      foreach ($items as $delta => $item) {
           if ($item['news_date']) {
                $formattedDate = _dateToString($item['news_date']);
                $element[$delta]['#markup'] = '<span>' . $formattedDate .'</span>';
            }
      }
      break;
  }
  return $element;
}
 
/**
 * Implements hook_field_widget_form().
 */
function news_date_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  $field_name = $field['field_name'];
  $field_type = $field['type'];
 
  $default_date_int = $instance['default_value'][0][$field_type][$field_type];
  $default_date_array = _intToDateArray($default_date_int);
 
  $news_data_value = isset($default_date_array) ? $default_date_array : _intToDateArray(time());
 
  if (isset($form_state['input'][$field_name][$langcode][$delta][$field_type]['day'])) {
    $day = $form_state['input'][$field_name][$langcode][$delta][$field_type]['day'];
    $month = $form_state['input'][$field_name][$langcode][$delta][$field_type]['month'];
    $year = $form_state['input'][$field_name][$langcode][$delta][$field_type]['year'];
    $news_data_value = array('year' => $year, 'month' => $month, 'day' => $day);
  }
 
  switch ($instance['widget']['type']) {
    case 'news_date':
 
      $element['news_date'] = array(
          '#type' => 'date',
          '#title' => $element['#title'],
          '#description' => $element['#description'],
          '#default_value' => $news_data_value,
          '#required' => $element['#required'],
          '#weight' => isset($element['#weight']) ? $element['#weight'] : 0,
          '#delta' => $delta,
          '#element_validate' => array('strToDateValidate'),
      );
 
      break;
  }
  return $element;
}
 
/**
 * Implements hook_field_widget_error().
 */
function news_date_widget_error($element, $error, $form, &$form_state) {
  switch ($error['error']) {
    case 'news_date_invalid':
      form_error($element, $error['message']);
      break;
  }
}
 
 
/**
 * Implements hook_field_is_empty().
 */
function news_date_field_is_empty($item, $field) {
   if (empty($item['news_date'])) {
        return true;
   }
}
 
/**
 * Implements hook_field_widget_info().
 */
function news_date_field_widget_info() {
  return array(
    'news_date' => array(
      'label' => t('News Letter Date'),
      'field types' => array('news_date'),
    ),
  );
}
 
/**
 * Utility function which converts the 3 elements, month, day and year
 * in to a unix timestamp (number of seconds) 
 */
function strToDateValidate($element, &$form_state) {
  if (isset($element['#value'])) {
     $day = $element['#value']['day'];
     $month = $element['#value']['month'];
     $year = $element['#value']['year'];
     $value = mktime(0, 0, 0, $month, $day, $year);
     form_set_value($element, array('news_date' => $value), $form_state);
  }
}
/**
 * Utility function which converts a string representation of a unix timestamp
 * and converts to a human readable format.
 */
function _dateToString($dateValue) {
  $str = "Unable to Format Date";
  try {
   $timestamp = intval($dateValue);
   $str = format_date($timestamp, 'custom', 'M-d-Y');
  } catch (Exception $e) {
     $str = "Unable to Format Date" . $e->getMessage();
  }
  return $str;
}
 
 
/**
 * Utility function which converts a string representation of a unix timestamp
 * and converts to an array suitable for the Drupal date widget (3 drop down combo 
 * boxes, month, day, year).
 */
function _intToDateArray($timestr) {
  $timestamp = intval($timestr);
  $year = date('Y', $timestamp);
  $month = date('m',$timestamp);
  $day = date('d',$timestamp);
  return array('year' => $year, 'month' => $month, 'day' => $day);
}