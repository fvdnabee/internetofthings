<?php

function coap_discovery_schema(){
	$schema['coap_discovery_resources'] = array( //moet geïntegreerd worden met coap_resource_resources
		'description' => "Tabel om resources en hun karakteristieken bij te houden",
		'fields' => array(
				'uri' => array(
					'type' => 'varchar',
					'not null' => TRUE,
					'length' => '128',
					'description' => 'Een URI van een resource',
				),
				'obs' => array(					
					'type' => 'int',
					'unsigned' => TRUE,
					'not null' => TRUE,
					'default' => 0,
					'description' => 'Waarde om te bepalen of het device observeerbaar is of niet --> 0 = niet observeerbaar, 1 = wel observeerbaar',
				),
				'rt' => array(
					'type' => 'varchar',
					'not null' => FALSE,
					'length' => '128',
					'description' => 'application-specific semantic type',
				),
				'ct' => array(
					'type' => 'varchar',
					'not null' => FALSE,
					'length' => '128',
					'description' => 'content-type',
				),
				'ifd' => array(
					'type' => 'varchar',
					'not null' => FALSE,
					'length' => '128',
					'description' => 'interface desciption',
				),
				'sz' => array(
					'type' => 'varchar',
					'not null' => FALSE,
					'length' => '128',
					'description' => 'maximum size',
				),
				'title' => array(
					'type' => 'varchar',
					'not null' => FALSE,
					'length' => '128',
					'description' => 'human-readable name of resource',
				),
				'anchor' => array(
					'type' => 'varchar',
					'not null' => FALSE,
					'length' => '128',
					'description' => 'anchoring into other resource',
				),
				'rel' => array(
					'type' => 'varchar',
					'not null' => FALSE,
					'length' => '128',
					'description' => 'relation between source entered in anchor',
				),
				'last_error' => array(
					'description' => 'Laatst opgetreden fout',
					'type' => 'varchar',
					'not null' => TRUE,
					'length' => '128',
				),
			),
			'primary key' => array('uri'),
	);
	
	$schema['coap_discovery_users'] = array( //deze tabel moet geïntegreerd worden in coap_resource_users
		'description' => "Tabel om users bij te houden en de URI's die ze willen gebruiken. Zowel devices als resources",
		'fields' => array(
				'uid' => array(
					'type' => 'int',
					'unsigned' => TRUE,
					'not null' => TRUE,
					'description' => 'User ID',
				),
				'uri' => array(
					'type' => 'varchar',
					'not null' => TRUE,
					'length' => '128',
					'description' => 'Een URI van een embedded device',
				),
				'device' => array(
					'description' => 'Waarde om te bepalen of het om een resource of een device gaat --> 0 = resource, 1 = device',
					'type' => 'int',
					'unsigned' => TRUE,
					'not null' => TRUE,
					'default' => 0,
				),
				'observe' => array(
					'description' => 'Waarde om te bepalen of de gebruiker het device wil observeren of niet --> 0 = niet observeren, 1 = wel observeren',
					'type' => 'int',
					'unsigned' => TRUE,
					'not null' => TRUE,
					'default' => 0,
				),
				'watch' => array(
					'description' => 'Waarde om te bepalen of de gebruiker de waardes wil zien verschijnen of niet --> 0 = niet verschijnen, 1 = wel verschijnen',
					'type' => 'int',
					'unsigned' => TRUE,
					'not null' => TRUE,
					'default' => 0,
				),
				'polling_interval' => array(
					'description' => 'Waarde die het aantal seconden weergeeft tussen 2 opvragingen vanuit jQuery',
					'type' => 'int',
					'unsigned' => TRUE,
					'not null' => TRUE,
					'default' => 2,
				),
				'last_method' => array(
					'description' => 'Methode van laatste request --> {GET, PUT, POST, DELETE}',
					'type' => 'varchar',
					'not null' => FALSE,
					'length' => '64',
				),
				'last_response' => array(
					'description' => 'Laatst verkregen response',
					'type' => 'varchar',
					'not null' => FALSE,
					'length' => '2048',
				),
				'responded' => array(
					'description' => 'value indicating if server just responded',
					'type' => 'int',
					'unsigned' => TRUE,
					'not null' => TRUE,
					'default' => 0,
				),
				'response_type' => array(
					'description' => 'Response type of last received response',
					'type' => 'varchar',
					'not null' => FALSE,
					'length' => '2048',
				),
			),
			'primary key' => array('uid', 'uri'),
			'foreign keys' => array(
				'uri' => array(
					'table' => 'coap_discovery_resources',
					'columns' => array('uri' => 'uri'),
				),
			),
	);
	
	return $schema;
}

function coap_discovery_uninstall(){
	db_drop_table('coap_discovery_users');
	db_drop_table('coap_discovery_core_links');
}