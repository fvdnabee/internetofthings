<?php

/**
 * Implements hook_schema().
 */
function temperatuursensor_met_coap_library_schema() {
	
	// Tabel om resources bij te houden
	$schema['CoAP_resources'] = array(
		'description' => "Tabel om resources en hun karakteristieken bij te houden",
		'fields' => array(
				'uri' => array(
					'type' => 'varchar',
					'not null' => TRUE,
					'length' => '128',
					'description' => 'Een URI van een embedded device',
				),
				'observable' => array(
					'description' => 'Waarde om te bepalen of het device observeerbaar is of niet --> 0 = niet observeerbaar, 1 = wel observeerbaar',
					'type' => 'int',
					'unsigned' => TRUE,
					'not null' => TRUE,
					'default' => 0,
				),
				'last_error' => array(
					'description' => 'Laatst opgetreden fout',
					'type' => 'varchar',
					'not null' => TRUE,
					'length' => '128',
				),
			),
			'primary key' => array('uri'),
	);
	
	// Tabel om URI's per user bij te houden
	$schema['CoAP_users'] = array(
		'description' => "Tabel om users bij te houden en de URI's die ze willen gebruiken",
		'fields' => array(
				'uid' => array(
					'type' => 'int',
					'unsigned' => TRUE,
					'not null' => TRUE,
					'description' => 'User ID',
				),
				'uri' => array(
					'type' => 'varchar',
					'not null' => TRUE,
					'length' => '128',
					'description' => 'Een URI van een embedded device',
				),
				'observe' => array(
					'description' => 'Waarde om te bepalen of de gebruiker het device wil observeren of niet --> 0 = niet observeren, 1 = wel observeren',
					'type' => 'int',
					'unsigned' => TRUE,
					'not null' => TRUE,
					'default' => 0,
				),
				'watch' => array(
					'description' => 'Waarde om te bepalen of de gebruiker de waardes wil zien verschijnen of niet --> 0 = niet verschijnen, 1 = wel verschijnen',
					'type' => 'int',
					'unsigned' => TRUE,
					'not null' => TRUE,
					'default' => 0,
				),
				'polling_interval' => array(
					'description' => 'Waarde die het aantal seconden weergeeft tussen 2 opvragingen vanuit jQuery',
					'type' => 'int',
					'unsigned' => TRUE,
					'not null' => TRUE,
					'default' => 2,
				),
				'last_method' => array(
					'description' => 'Methode van laatste request --> {GET, PUT, POST, DELETE}',
					'type' => 'varchar',
					'not null' => FALSE,
					'length' => '64',
				),
				'last_response' => array(
					'description' => 'Laatst verkregen response',
					'type' => 'varchar',
					'not null' => FALSE,
					'length' => '2048',
				),
				'responded' => array(
					'description' => 'value indicating if server just responded',
					'type' => 'int',
					'unsigned' => TRUE,
					'not null' => TRUE,
					'default' => 0,
				),
				'response_type' => array(
					'description' => 'Response type of last received response',
					'type' => 'varchar',
					'not null' => FALSE,
					'length' => '2048',
				),
			),
			'primary key' => array('uid', 'uri'),
			'foreign keys' => array(
				'uri' => array(
					'table' => 'CoAP_resources',
					'columns' => array('uri' => 'uri'),
				),
			),
	);

	// Tabel om opgevraagde waarden op te slaan
	$schema['CoAP_values'] = array(
		'description' => 'Tabel om geschiedenis van opgevraagde waarden op te slaan',
		'fields' => array(
				'hid' => array(
					'type' => 'serial',
					'unsigned' => TRUE,
					'not null' => TRUE,
					'description' => 'Primary key, unique history entry ID',
				),
				'uid' => array(
					'type' => 'int',
					'unsigned' => TRUE,
					'not null' => TRUE,
					'description' => 'User ID',
				),
				'uri' => array(
					'type' => 'varchar',
					'not null' => TRUE,
					'length' => '128',
					'description' => 'Een URI van een embedded device',
				),
				'content_format'=> array(
					'type' => 'varchar',
					'not null' => FALSE,
					'length' => '256',
					'description' => 'Het content-format van de response',
				),
				'payload'=> array(
					'type' => 'varchar',
					'not null' => FALSE,
					'length' => '2048',
					'description' => 'De inhoud van de payload',
				),
				'parsed_value' => array(
					'description' => 'Opgevraagde waarde',
					'type' => 'varchar',
					'length' => '128',
					'description' => 'Value that has been parsed out of the payload of the response, is original response if no value could be parsed',
					'not null' => FALSE,
				),
				'max_age' => array(
					'description' => 'Geldigheidsperiode in seconden',
					'type' => 'int',
					'unsigned' => TRUE,
					'not null' => FALSE,
				),
				'response_type'=> array(
					'type' => 'varchar',
					'not null' => FALSE,
					'length' => '256',
					'description' => 'Het content-type van de response',
				),
				'timestamp' => array(
					'description' => 'Tijd van opvraging',
					'mysql_type' => 'timestamp',
					'not null' => TRUE,
				),
				'original_response' => array(
					'type' => 'varchar',
					'not null' => TRUE,
					'length' => '2048',
					'default' => 'empty',
					'description' => 'De originele response van de aanvraag',
				),
			),
			'primary key' => array('hid'),
			'foreign keys' => array(
				'uri' => array(
					'table' => 'CoAP_resources',
					'columns' => array('uri' => 'uri'),
				),
				'uid' => array(
					'table' => 'CoAP_users',
					'columns' => array('uid' => 'uid'),
				),
			),
	);

	return $schema;
}