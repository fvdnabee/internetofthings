<?php
// $Id$

function achtergrondproces_test_block_info() {
	$blocks['user_custom'] = array(
		'info' => t('Blok voor achtergrondproces te testen'),
		);
	return $blocks;
}

function achtergrondproces_test_form($form_in, &$form_state) {
	$form['wx_info_title'] = array (
		'#value' => t('Test achtergrondproces'),
		);
	$form['wx_info']['temperatuur_udp_url_submit'] = array (
		'#type' => 'submit',
		'#value' => t('Refresh'),
		);
	$form['#action'] = '/';
	return $form;
}

function achtergrondproces_test_block_view($delta='') {
	$block = null;
	$block_content = null;
	static $globaal;
	$block_content .= "<label>Cache variabele: " . cache_get('continue_observe')->data . "</label><br><label>Status: " . variable_get("status", "/") . "</label><br><label>Continue binnen achtergrondproces? " . variable_get("continue_achtergrondproces", "") . "</label><br><label>continue? " . variable_get("continue", "") . "</label><br><label>response: " . variable_get("response", "no response") . "</label>";
	$temp = drupal_get_form('achtergrondproces_test_form');
	$block_content .= drupal_render($temp);
	$block['content'] = $block_content;
	return $block;
}

function achtergrondproces_test_form_submit($form, $form_state) {
	variable_set('status', 'form submitted');
	if(variable_get('continue', 'no') == 'yes'){
		variable_set('continue', 'no');
	}
	else{
		variable_set('continue', 'yes');
		// global $socket;
		// $socket = pfsockopen("udp://[2001:6a8:1d80:200::2]", 5683, $errno, $errstr); // udp-socket openen
		// $out = "42";
		// $out .= "01";
		// $out .= generate_message_id_udp();
		// $out .= generate_token();
		// $out .= "60";
		// $out .= "53";
		// $out .= "6f6273";
		// $binary = pack("H*", $out); // hexadecimaal omzetten naar binair
		// $returnvalue = fwrite($socket, $binary); // wegschrijven naar udp-socket
		// if($returnvalue != FALSE){
			background_process_start('achtergrondproces');
		// }
	}
	cache_set('continue_observe', variable_get('continue', 'no'), 'cache');
}

function achtergrondproces(){
	static $globaal;
	$globaal = "veranderd";
	variable_set('status', 'in achtergrondproces');
	variable_set("continue_achtergrondproces", cache_get('continue_observe')->data);
	// global $socket;
	// $response = fread($socket, 128); // lezen van udp-socket
	// variable_set("response", $response);
	if(cache_get('continue_observe')->data == "yes"){
		background_process_start('achtergrondproces');
	}
	else{
		variable_set('status', 'einde achtergrondproces');
	}
}